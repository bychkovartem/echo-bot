from aiogram import Router
from aiogram.types import Message

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message()
async def echo_all(message: Message):
    try:
        # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è Markdown/HTML)
        if message.text:
            await message.answer(
                text=message.text
            )

        # –§–æ—Ç–æ (—Å –ø–æ–¥–ø–∏—Å—å—é –∏–ª–∏ –±–µ–∑)
        elif message.photo:
            await message.answer_photo(
                photo=message.photo[-1].file_id,
                caption=message.caption
            )

        # –í–∏–¥–µ–æ
        elif message.video:
            await message.answer_video(
                video=message.video.file_id,
                caption=message.caption
            )

        # –°—Ç–∏–∫–µ—Ä—ã
        elif message.sticker:
            await message.answer_sticker(
                sticker=message.sticker.file_id
            )

        # –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        elif message.voice:
            await message.answer_voice(
                voice=message.voice.file_id,
                caption=message.caption
            )

        # –ê—É–¥–∏–æ (–º—É–∑—ã–∫–∞)
        elif message.audio:
            await message.answer_audio(
                audio=message.audio.file_id,
                caption=message.caption
            )

        # –î–æ–∫—É–º–µ–Ω—Ç—ã (PDF, ZIP –∏ –¥—Ä.)
        elif message.document:
            await message.answer_document(
                document=message.document.file_id,
                caption=message.caption
            )

        # GIF-–∞–Ω–∏–º–∞—Ü–∏–∏
        elif message.animation:
            await message.answer_animation(
                animation=message.animation.file_id,
                caption=message.caption
            )

        # –ö–æ–Ω—Ç–∞–∫—Ç—ã
        elif message.contact:
            await message.answer_contact(
                phone_number=message.contact.phone_number,
                first_name=message.contact.first_name,
                last_name=message.contact.last_name,
                vcard=message.contact.vcard
            )

        # –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
        elif message.location:
            await message.answer_location(
                latitude=message.location.latitude,
                longitude=message.location.longitude
            )

        # –û–ø—Ä–æ—Å—ã (Quiz/Poll)
        elif message.poll:
            await message.answer_poll(
                question=message.poll.question,
                options=[option.text for option in message.poll.options],
                is_anonymous=message.poll.is_anonymous,
                type=message.poll.type,
                allows_multiple_answers=message.poll.allows_multiple_answers,
                correct_option_id=message.poll.correct_option_id if message.poll.type == "quiz" else None,
                explanation=message.poll.explanation if message.poll.type == "quiz" else None,
                explanation_entities=message.poll.explanation_entities if message.poll.type == "quiz" else None,
                open_period=message.poll.open_period,
                close_date=message.poll.close_date
            )

        # –ö—É–±–∏–∫ (üé≤, üéØ, üèÄ –∏ –¥—Ä.)
        elif message.dice:
            await message.answer_dice(
                emoji=message.dice.emoji
            )

        # –î–∞–Ω–Ω—ã–µ –∏–∑ WebApp (–µ—Å–ª–∏ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç WebApp)
        elif message.web_app_data:
            await message.answer(
                text=f"üì≤ WebApp Data:\n{message.web_app_data.data}"
            )

        # –ú–µ—Å—Ç–∞ (Venue)
        elif message.venue:
            await message.answer_venue(
                latitude=message.venue.location.latitude,
                longitude=message.venue.location.longitude,
                title=message.venue.title,
                address=message.venue.address,
                foursquare_id=message.venue.foursquare_id,
                foursquare_type=message.venue.foursquare_type,
                google_place_id=message.venue.google_place_id,
                google_place_type=message.venue.google_place_type
            )

        # –ï—Å–ª–∏ —Ç–∏–ø –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
        else:
            await message.answer("‚ùå –ù–µ –º–æ–≥—É –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç–æ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è.")

    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
